# provider: cloudflare

# cloudflare:
#   email: your@example.com
#   apiToken: your-api-token

# logLevel: info

# policy: sync

# domainFilters:
#   - example.com

# sources:
#   - ingress
---
fullnameOverride: external-dns-mikrotik

logLevel: debug
logFormat: text

interval: 5s
sources: ["ingress", "service", "crd"]
registry: txt
txtOwnerId: default
txtPrefix: k8s.
domainFilters: ["comintern.local"]
excludeDomains: []
policy: sync

provider:
  name: webhook
  webhook:
    image:
      repository: ghcr.io/mirceanton/external-dns-provider-mikrotik
      tag: v1.4.11
      pullPolicy: IfNotPresent
    env:
      - name: LOG_FORMAT
        value: json
      - name: LOG_LEVEL
        value: debug

      - name: MIKROTIK_DEFAULT_TTL
        value: "1800"
      - name: MIKROTIK_DEFAULT_COMMENT
        value: Managed by ExternalDNS

      - name: MIKROTIK_BASEURL
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_BASEURL
      - name: MIKROTIK_USERNAME
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_USERNAME
      - name: MIKROTIK_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_PASSWORD
      - name: MIKROTIK_SKIP_TLS_VERIFY
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_SKIP_TLS_VERIFY
    # livenessProbe:
    #   httpGet:
    #     path: /healthz
    #     port: 8080
    #   initialDelaySeconds: 10
    #   timeoutSeconds: 60
    # readinessProbe:
    #   httpGet:
    #     path: /readyz
    #     port: 8080
    #   initialDelaySeconds: 10
    #   timeoutSeconds: 60

extraArgs:
  - --ignore-ingress-tls-spec
  - --managed-record-types=A
  - --managed-record-types=AAAA
  - --managed-record-types=CNAME
  - --managed-record-types=TXT
  - --managed-record-types=MX
  - --managed-record-types=SRV
  - --managed-record-types=NS
