global:
    domain: argocd.comintern.local
configs:
    # General Argo CD configuration. Any values you put under `.configs.cm` are passed to argocd-cm ConfigMap.
    ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
    cm:
        # -- Create the argocd-cm configmap for [declarative setup]
        create: true
        kustomize.buildOptions: --enable-alpha-plugins --enable-exec
    ssh:
        # -- Specifies if the argocd-ssh-known-hosts-cm configmap should be created by Helm.
        create: true
        # -- Annotations to be added to argocd-ssh-known-hosts-cm configmap
        annotations: {}
        # -- Known hosts to be added to the known host list by default.
        # @default -- See [values.yaml]
        knownHosts: |
            [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
            [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
            [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
            bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
            bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
            bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
            github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
            github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
            github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
            gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
            gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
            gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
            ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
            vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
        # -- Additional known hosts for private repositories
        extraHosts: ""
    cmp:
        # -- Create the argocd-cmp-cm configmap
        create: true
        # -- Annotations to be added to argocd-cmp-cm configmap
        annotations: {}
        # -- Plugin yaml files to be added to argocd-cmp-cm
        plugins:
            argocd-vault-plugin:
                init:
                    command:
                        - /bin/sh
                        - -c
                    args:
                        - echo 'Initializing argocd-vault-plugin'
                generate:
                    command:
                        - /bin/sh
                        - -c
                    args:
                        - /usr/local/bin/sops -d $VALUES_FILE
                discover:
                    fileName: ./*.enc.yaml
                    #     find:
                    #         command:
                    #             - sh
                    #             - -c
                    #             - find . -maxdepth 1 -type f -name '*.enc.yaml' -print -quit
    secret:
        # my-plugin:
        #   init:
        #     command: [sh]
        #     args: [-c, 'echo "Initializing..."']
        #   generate:
        #     command: [sh, -c]
        #     args:
        #       - |
        #         echo "{\"kind\": \"ConfigMap\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"$ARGOCD_APP_NAME\", \"namespace\": \"$ARGOCD_APP_NAMESPACE\", \"annotations\": {\"Foo\": \"$ARGOCD_ENV_FOO\", \"KubeVersion\": \"$KUBE_VERSION\", \"KubeApiVersion\": \"$KUBE_API_VERSIONS\",\"Bar\": \"baz\"}}}"
        #   discover:
        #     fileName: "./subdir/s*.yaml"
        #     find:
        #       glob: "**/Chart.yaml"
        #       command: [sh, -c, find . -name env.yaml]
        # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets
        # -- Create the argocd-secret
        createSecret: ENC[AES256_GCM,data:H4id1Q==,iv:Vsswy9Q7kR3S1KafUYFMoUnY9ewmMMZnp/UF6EcOdyc=,tag:bMWVVOR8m18TKdC0qWryoQ==,type:bool]
        # -- Labels to be added to argocd-secret
        labels: {}
        # -- Annotations to be added to argocd-secret
        annotations: {}
        # -- Shared secret for authenticating GitHub webhook events
        githubSecret: ""
        # -- Shared secret for authenticating GitLab webhook events
        gitlabSecret: ""
        # -- Shared secret for authenticating BitbucketServer webhook events
        bitbucketServerSecret: ""
        # -- UUID for authenticating Bitbucket webhook events
        bitbucketUUID: ""
        # -- Shared secret for authenticating Gogs webhook events
        gogsSecret: ""
        ## Azure DevOps
        azureDevops:
            # -- Shared secret username for authenticating Azure DevOps webhook events
            username: ""
            # -- Shared secret password for authenticating Azure DevOps webhook events
            password: ""
        # -- add additional secrets to be added to argocd-secret
        ## Custom secrets. Useful for injecting SSO secrets into environment variables.
        ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets
        ## Note that all values must be non-empty.
        extra: {}
        # LDAP_PASSWORD: "mypassword"
        # -- Bcrypt hashed admin password
        ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
        ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`
        argocdServerAdminPassword: ""
        # -- Admin password modification time. Eg. `"2006-01-02T15:04:05Z"`
        # @default -- `""` (defaults to current time)
        argocdServerAdminPasswordMtime: ""
notifications:
    enabled: true
server:
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 50
        targetMemoryUtilizationPercentage: 50
    ingress:
        enabled: true
        hostname: argocd.comintern.local
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: selfsigned-issuer
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        tls: false
        ingressClassName: nginx
dex:
    enabled: false
redis:
    enabled: false
externalRedis:
    enabled: true
    host: redis-master
    port: 6379
    username: ""
    password: ""
    existingSecret: ENC[AES256_GCM,data:gCNrh3KxRcdtTA==,iv:ewUn0qjel0apF5u4r49Yn1ARVsiMjqFk/mZkAAAcBQ8=,tag:Rlt4XL1X7YtAD2GZo/sk0A==,type:str]
    secretAnnotations: {}
    # existingSecretPasswordKey: redis-password
    # selector: {}
repoServer:
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 50
        targetMemoryUtilizationPercentage: 50
    extraContainers:
        - name: argocd-vault-plugin
          command:
            - /var/run/argocd/argocd-cmp-server
          args:
            - --loglevel
            - debug
          image: ubuntu
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
            - mountPath: /tmp
              name: cmp-tmp
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
            - mountPath: /home/argocd/cmp-server/config/plugin.yaml
              subPath: argocd-vault-plugin.yaml
              name: argocd-cmp-cm
            - mountPath: /usr/local/bin
              name: custom-tools
    volumes:
        - name: argocd-cmp-cm
          configMap:
            name: argocd-cmp-cm
        - name: custom-tools
          emptyDir: {}
        - name: cmp-tmp
          emptyDir: {}
    initContainers:
        - name: install-tools
          image: alpine:3.18
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
          command:
            - /bin/sh
            - -c
          args:
            - "set -eux;\necho \"Creating /custom-tools directory...\";\nmkdir -p /custom-tools;\n\necho \"Installing Kustomize...\";\nbusybox wget -qO- https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.2/kustomize_v5.4.2_linux_amd64.tar.gz | tar xz -C /custom-tools;\n\necho \"Installing KSOPS...\";\nbusybox wget -qO- https://github.com/viaduct-ai/kustomize-sops/releases/download/v4.4.0/ksops_4.4.0_Linux_x86_64.tar.gz | tar xz -C /custom-tools;\n\necho \"Installing SOPS...\";\nbusybox wget -q https://github.com/getsops/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64 -O /custom-tools/sops;\nchmod +x /custom-tools/sops;\n\necho \"All tools installed successfully.\";              \n"
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
    volumeMounts:
        - mountPath: /usr/local/bin/kustomize
          name: custom-tools
          subPath: kustomize
        - mountPath: /usr/local/bin/ksops
          name: custom-tools
          subPath: ksops
        - mountPath: /usr/local/bin/sops
          name: custom-tools
          subPath: sops
    envFrom:
        - secretRef:
            name: sops-age-key
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1wp7n5rlrjdqjx7hpkfv35ejwauuggyncl0cu4zllcq59a696sudqnucqfe
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA5YmxzZmY0c2NLSVhBNDhQ
            dXVaUGZML096ZW5pcHJFaUdZcWJuTjI5WjFjCkVFSVRrZHFMM2pQN2xYc0haNkhT
            OTRKUTlGeE1WZFhqcUM2b3o2SFVkWjgKLS0tIDQ4dk9vL2pDR2xxQlFRYzU4SHJx
            MTdWNU0vN0U2M2RrdmVXMCs1cThidVEKLGUnHlMg8moq9rARCOaNsOJG9suI194Q
            c/5DewMvkNGbFEO3A9M/WPJIMAR06dNm0wJfkiioFaDwBYPVcic9SA==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-10-30T18:26:00Z"
    mac: ENC[AES256_GCM,data:wSplQmP+kwdgMrjWm0P1Q1uwaf7Vvbw+WTTefjelhWLCBXJZSs33tiSixDc1lDa1r6nWqQx6WSBxBuNctzoaxp3PJyhSSBf6bbr/PdXPsZ7vdgy/TGbdPCatN1BHGr2fJcM1o1l4/6KhAGYN4KjuYqDoNuqrXhPpc7bcBSK47fk=,iv:QU4QN+vuHoRICn74xxpVO47EbFmSah46Tk4kENiNp4s=,tag:JPIPejRNJa8/9ciVFfPd4A==,type:str]
    pgp: []
    encrypted_regex: ^(SOPS_AGE_KEY|.*password.*|.*PASSWORD.*|.*Secret.*|email|.*USERNAME.*|MIKROTIK_BASEURL|access-token|unseal_keys.*|vault-init.yaml)$
    version: 3.7.1
